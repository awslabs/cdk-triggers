# ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".

name: release
on:
  workflow_dispatch: {}
  push:
    branches:
      - main
jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      CI: "true"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          fetch-depth: 0
      - name: Install dependencies
        run: yarn install --check-files --frozen-lockfile
      - name: Release
        run: npx projen release
      - name: Fail if new commits were pushed
        run: '[ "$(git ls-remote origin -h ${{ github.ref }} | cut -f1)" = "${{ github.sha }}" ]'
      - if: always()
        name: Prepare artifact directory "dist"
        run: |-
          if [ ! -e dist ]; then
            mkdir -p dist
            touch dist/.empty
          elif [ ! -d dist ]; then
            echo "Artifact in "dist" must be a directory"
            exit 1
          fi
      - name: Upload dist
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: dist
          path: dist
    container:
      image: jsii/superchain:1-buster-slim-node14
  release_github:
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GITHUB_REPOSITORY: ${{ github.repository }}
      GITHUB_REF: ${{ github.ref }}
    steps:
      - uses: actions/setup-node@v2
        with:
          node-version: 14.x
      - name: Download dist
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: Prepare Repository
        run: mv dist .repo
      - name: Collect GitHub Metadata
        run: mv .repo/dist dist
      - name: Release
        run: errout=$(mktemp); gh release create $(cat dist/releasetag.txt) -R $GITHUB_REPOSITORY -F dist/changelog.md -t $(cat dist/releasetag.txt) --target $GITHUB_REF 2> $errout && true; exitcode=$?; if [ $exitcode -ne 0 ] && ! grep -q "Release.tag_name already exists" $errout; then cat $errout; exit $exitcode; fi
  release_npm:
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      NPM_DIST_TAG: latest
      NPM_REGISTRY: registry.npmjs.org
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
    steps:
      - uses: actions/setup-node@v2
        with:
          node-version: 14.x
      - name: Download dist
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: Prepare repository
        run: mv dist .repo
      - name: Install dependencies
        run: (cd .repo && yarn install --check-files --frozen-lockfile)
      - name: Package for js
        run: (cd .repo && npx projen package:js)
      - name: Extract build artifacts
        run: mv .repo/dist dist
      - name: Release
        run: npx -p jsii-release@latest jsii-release-npm
  release_maven:
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      MAVEN_ENDPOINT: https://s01.oss.sonatype.org
      MAVEN_GPG_PRIVATE_KEY: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
      MAVEN_GPG_PRIVATE_KEY_PASSPHRASE: ${{ secrets.MAVEN_GPG_PRIVATE_KEY_PASSPHRASE }}
      MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
      MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
      MAVEN_STAGING_PROFILE_ID: ${{ secrets.MAVEN_STAGING_PROFILE_ID }}
    steps:
      - uses: actions/setup-java@v2
        with:
          distribution: temurin
          java-version: 11.x
      - uses: actions/setup-node@v2
        with:
          node-version: 14.x
      - name: Download dist
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: Prepare repository
        run: mv dist .repo
      - name: Install dependencies
        run: (cd .repo && yarn install --check-files --frozen-lockfile)
      - name: Package for java
        run: (cd .repo && npx projen package:java)
      - name: Extract build artifacts
        run: mv .repo/dist dist
      - name: Release
        run: npx -p jsii-release@latest jsii-release-maven
  release_pypi:
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
      TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
    steps:
      - uses: actions/setup-node@v2
        with:
          node-version: 14.x
      - uses: actions/setup-python@v2
        with:
          python-version: 3.x
      - name: Download dist
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: Prepare repository
        run: mv dist .repo
      - name: Install dependencies
        run: (cd .repo && yarn install --check-files --frozen-lockfile)
      - name: Package for python
        run: (cd .repo && npx projen package:python)
      - name: Extract build artifacts
        run: mv .repo/dist dist
      - name: Release
        run: npx -p jsii-release@latest jsii-release-pypi
  release_nuget:
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
    steps:
      - uses: actions/setup-node@v2
        with:
          node-version: 14.x
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.x
      - name: Download dist
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: Prepare repository
        run: mv dist .repo
      - name: Install dependencies
        run: (cd .repo && yarn install --check-files --frozen-lockfile)
      - name: Package for dotnet
        run: (cd .repo && npx projen package:dotnet)
      - name: Extract build artifacts
        run: mv .repo/dist dist
      - name: Release
        run: npx -p jsii-release@latest jsii-release-nuget
